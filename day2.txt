
6)

class Cpu
{
	int price=665757;
	class Processor
	{
		int cores=5;
		String manufacturer="intel";
		void pro()
		{
			System.out.println(manufacturer+"core i"+cores);
		}
	}
	static class Ram
	{
		int memory=1;
		String manufacturer="dsffc  ";
		void raminfo()
		{
			System.out.println(manufacturer+ memory+" TB");			
		}
	}


public static void main(String args[])
{
	Cpu obj1=new Cpu();
	Cpu.Processor obj2=obj1.new Processor();
	Cpu.Ram obj3=new Cpu.Ram();
	obj2.pro();
	obj3.raminfo();
}
}

OUTPUT
intelcore i5
dsffc  1 TB

-------------------------------------------------------------------------------------------------


7)

import java.util.*;
class Student
{
	String name;
	int rollno;
	int[] mark=new int[4];
	
	Scanner s=new Scanner(System.in);

	void read()
	{
	System.out.println("enter the name:");
	name=s.nextLine();
	System.out.println("enter the rollno:");
	rollno=s.nextInt();
	System.out.println("enter the marks:");
		for(int i=0;i<4;i++)
		{
			mark[i]=s.nextInt();
		}
	}

	void check()
	{
	int sum=0;
	for(int i=0;i<4;i++)
	{
		sum=sum+mark[i];
	}
	System.out.println("the total marks:"+sum);

	int perc=(sum*100)/400;
	System.out.println("the percentage of marks:"+perc);	
	
	}
public static void main(String args[])
{
	Student m1=new Student();
	m1.read();
	m1.check();
}
}




OUTPUT

enter the name:
sreedev
enter the rollno:
53
enter the marks:
34
43
75
96
the total marks:248
the percentage of marks:62


-----------------------------------------------------------------------------------------------


8)


import java.util.Scanner;

class Matrix
{

	int i,j,r1,r2,c1,c2;
	int[][] m1=new int[5][5];
	int[][] m2=new int[5][5];
	int[][] m3=new int[5][5];
	 
	void read()
	{
		Scanner s=new Scanner(System.in);
		System.out.println("enter the number of rows in first matrix");
		r1=s.nextInt();
		System.out.println("enter the number of columns in first matrix");
		c1=s.nextInt();
		System.out.println("enter the number of rows in second matrix");
		r2=s.nextInt();
		System.out.println("enter the number of columns in second matrix");
		c2=s.nextInt();



		System.out.println("the first matrix:");
		for(i=0;i<r1;i++)
		{
			for(j=0;j<c1;j++)
			{
				m1[i][j]=s.nextInt();
			}
		}

		

		System.out.println("the second matrix:");
		for(i=0;i<r2;i++)
		{
			for(j=0;j<c2;j++)
			{
				m2[i][j]=s.nextInt();
			}
		}
	}

	void add()
	{

		System.out.println("the sum matrix:");
		for(int i=0;i<r1;i++)
		{
			for(int j=0;j<c1;j++)
			{
				m3[i][j]=m1[i][j]+m2[i][j];
				System.out.print(m3[i][j]+"\t");
			}
		System.out.println("\n");
		}
	}
public static void main(String args[])
{
	Matrix obj=new Matrix();
	obj.read();
	obj.add();
}
}


OUTPUT

enter the number of rows in first matrix
2
enter the number of columns in first matrix
2
enter the number of rows in second matrix
2
enter the number of columns in second matrix
2
the first matrix:
2
3
4
5
the second matrix:
2
3
4
5
the sum matrix:
4	6	

8	10	



-------------------------------------------------------------------------------------------------------------------------------------
03/03/2025


9)


Sy-matrix



import java.util.Scanner;

class Matrix
{
	int flag=0;
	int i,j,r1,c1;
	int[][] m=new int[5][5];
	int[][] n=new int[5][5];

	void read()
	{
		Scanner s=new Scanner(System.in);
		System.out.println("enter the number of rows in matrix");
		r1=s.nextInt();
		System.out.println("enter the number of columns in matrix");
		c1=s.nextInt();
	
		System.out.println("the matrix:");
		for(i=0;i<r1;i++)
		{
			for(j=0;j<c1;j++)
			{
				m[i][j]=s.nextInt();
			}
		}


	}
	void trans()
	{

		
		for(int i=0;i<r1;i++)
		{
			for(int j=0;j<c1;j++)
			{
				n[j][i]=m[i][j];
			}	
		}
		
		for(int i=0;i<r1;i++)
		{
			for(int j=0;j<c1;j++)
			{
				if(m[i][j]!=n[i][j])
				{
					flag=1;
					break;
				}
			}	
		}
	
	//void check()
	//{
		if(flag==1)
		{
			System.out.println("not Symmetric ");		
		}
		else
		{
			System.out.println(" Symmetric");
		}
	}
	
public static void main(String args[])
{
	Matrix obj=new Matrix();
	obj.read();
	obj.trans();
	//obj.check();
}
}




OUTPUT:



enter the number of rows in matrix
2
enter the number of columns in matrix
2
the matrix:
3
4
5
6
not Symmetric 
s2mcabatch2@cscl6d25:~/Desktop/sk53/day2$ javac sy-matrix.java
s2mcabatch2@cscl6d25:~/Desktop/sk53/day2$ java Matrix
enter the number of rows in matrix
2
enter the number of columns in matrix
2
the matrix:
3
4
4
3
 Symmetric






---------------------------------------------------------------------------------------------------------------------------------------


12)


array-element search


import java.util.Scanner;

class Search
{
	int[] array=new int[4];
	int i;
	int n;
	int flag=0;
	Scanner s=new Scanner(System.in);
	void read()
	{

		System.out.println("enter the values:");
		for(i=0;i<4;i++)
		{
			array[i]=s.nextInt();
		}
	}

	void check()
	{
		System.out.println("enter the value for search:");
		n=s.nextInt();
		for(i=0;i<4;i++)
		{
			if(array[i]==n)
			{
			flag=1;
			}	
		}
		
	}
	void display()
	{
		if(flag==1)
		{
			System.out.println("found");				
		}
		else
		{
			System.out.println("not found");				
		}
	}

public static void main(String args[])
{
	Search obj=new Search();
	obj.read();
        obj.check();
	obj.display();
}
}




output:

	enter the values:
2
3
4
5
enter the value for search:
3
found
s2mcabatch2@cscl6d25:~/Desktop/sk53/day-3$ javac elementsearch.java
s2mcabatch2@cscl6d25:~/Desktop/sk53/day-3$ java Search
enter the values:
3
4
5
6
enter the value for search:
7
not found








--------------------------------------------------------------------------------------------------------------------------------------------



13)


Array of object

import java.util.*;
class Employee
{
	int eno,salary;
	int a;
	String ename;
	Scanner s=new Scanner(System.in);
	void read()
	{

		System.out.println("enter employee no.:");		
		eno=s.nextInt();
		System.out.println("enter employee name:");		
		ename=s.next();
		System.out.println("enter the salary: ");		
		salary=s.nextInt();
		
	}

	
public static void main(String args[])
{
	Scanner s=new Scanner(System.in);
	int i;
	Employee obj[]=new Employee[5];
	for(i=0;i<3;i++)
	{
	obj[i]=new Employee();
	obj[i].read();
	
	}
	System.out.println("enter the eno for search:");		
	int a=s.nextInt();
	for(i=0;i<3;i++)
	{
		if(obj[i].eno==a)
		{
			System.out.println("search element found:  emp no:"+obj[i].eno+"  empname:"+obj[i].ename+"  emp salary:"+obj[i].salary);
break;			
		}
		else
		{
			System.out.println("search element not found");	
break;	
				
		}
	}
}
}


OUTPUT:

enter employee no.:
1
enter employee name:
dfhdf
enter the salary: 
3245345
enter employee no.:
2
enter employee name:
gdfhft
enter the salary: 
546546
enter employee no.:
3
enter employee name:
dfhdfh
enter the salary: 
65767
enter the eno for search:
1
search element found:  emp no:1  empname:dfhdf  emp salary:3245345


--------------------------------------------------------------------------------------------------------------------------------------------

10/03.2025


11)

Character Sort->


import java.util.Arrays;

class main
{
public static void main(String args[])
{
String str="sreedev";
char[] charArray=str.toCharArray();
Arrays.sort(charArray);
System.out.println("sorted characters:"+ new String(charArray));
}
}

OUTPUT:

sorted characters:deeersv




--------------------------------------------------------------------------------------------------------------------------------------------

10)

String Sort->

import java.util.Arrays;
class Stringsort
{
	public static void main(String args[])
	{
		String[] words={"sgsxg","dsgxgvbxf","gdvdg","dzgf","sdghdrfg"};
	Arrays.sort(words);
	System.out.println("sorted words");
	for(String word: words)
	System.out.println(word);
	}
}

OUTPUT:

sorted words
dsgxgvbxf
dzgf
gdvdg
sdghdrfg
sgsxg


--------------------------------------------------------------------------------------------------------------------------------------------


CYCLE 3

14)

METHOD OVERLOADING


import java.util.*;
class main
{
void rect(int l,int b)
{
System.out.println("area of rectangle:"+l*b);
}
void circle(float r)
{
System.out.println("area of circle:"+3.14*r*r);
}
void sqr(int a)
{
System.out.println("area of square:"+a*a);
}
public static void main(String args[])
{
main obj=new main();
obj.rect(2,4);
obj.circle((float)2.3);
obj.sqr(4);
}
}


OUTPUT:

area of rectangle:8
area of circle:16.610599311256415
area of square:16


------------------------------------------------------------------------------------------------------------------------------------------


15)


Single Inheritance


import java.util.*;
class Employee
{
	int empid;
	String name;
	int salary;
	String address;

	Employee(int id,String n,int s,String a)
	{
	empid=id;
	name=n;
	salary=s;
	address=a;
	}
}

class Teacher extends Employee
{
	String dept;
	String sub;
	


	Teacher(int empid,String name,int salary,String address,String dept,String sub)
	{
		super(empid,name,salary,address);			
		this.dept=dept;
		this.sub=sub;
	}

	void display()
	{
		System.out.println("EmpID:"+empid);
		System.out.println("Name:"+name);
		System.out.println("Salary:"+salary);
		System.out.println("Address:"+address);
		System.out.println("Depertment:"+dept);
		System.out.println("Subject:"+sub);
	}


}
class main
{
public static void main(String args[])
{
	int empid;
	String name;
	int salary;
	String address;
	String dept;
	String sub;

Scanner sc=new Scanner(System.in);
Teacher arr[]=new Teacher[3];
System.out.println("enter size ");
int x=sc.nextInt();

for(int i=0;i<x;i++)
{
	System.out.println("EmpID:");
	empid=sc.nextInt();
	System.out.println("Name:");
	name=sc.next();
	System.out.println("Salary:");
	salary=sc.nextInt();
	System.out.println("Address:");
	address=sc.next();
	System.out.println("Department:");
	dept=sc.next();
	System.out.println("Subject:");
	sub=sc.next();
	
	arr[i]=new Teacher(empid,name,salary,address,dept,sub);
}
	for(int i=0;i<x;i++)
{
arr[i].display();
}
}
}


OUTPUT:

enter size 
2
EmpID:
35
Name:
tgfhbg
Salary:
5646
Address:
rtghy
Department:
rthgrt
Subject:
erght
EmpID:
2
Name:
rthrt
Salary:
435
Address:
rthheh
Department:
rth
Subject:
dth
EmpID:35
Name:tgfhbg
Salary:5646
Address:rtghy
Depertment:rthgrt
Subject:erght
EmpID:2
Name:rthrt
Salary:435
Address:rthheh
Depertment:rth
Subject:dth


-----------------------------------------------------------------------------------------------------------------------------------------


16)


Multi level Inheritance


import java.util.*;
class Person
{
	String name;
	String gender;
	String address;
	int age;

	Person(String n,String g,String ad,int a)
	{
	name=n;
	gender=g;
	address=ad;
	age=a;
	}
}

class Employee extends Person
{
	int empid ;
	String cname,qualification;
	int salary;
	


	Employee(String name,String gender,String address,int age,int empid,String cname,String qualification,int salary)
	{
		super(name,gender,address,age);			
		this.empid=empid;
		this.cname=cname;
		this.qualification=qualification;
		this.salary=salary;
	}
	
}

class Teacher extends Employee
{
	int teachid;
	String sub,dept;

	Teacher(String name,String gender,String address,int age,int empid,String cname,String qualification,int salary,int teachid,String sub,String dept)
	{
		super(name,gender,address,age,empid,cname,qualification,salary);
		this.teachid=teachid;
		this.sub=sub;
		this.dept=dept;		
	}

	void display()
	{
		System.out.println("<<<<<.......OUTPUT......>>>>>");
		System.out.println("Name:"+name);
		System.out.println("Gender:"+gender);
		System.out.println("Address:"+address);
		System.out.println("age:"+age);
		System.out.println("empid:"+empid);
		System.out.println("company name:"+cname);
		System.out.println("qualification:"+qualification);
		System.out.println("Salary:"+salary);
		System.out.println("Teacher id:"+teachid);
		System.out.println("Depertment:"+dept);
		System.out.println("Subject:"+sub);
	}

}



class main1
{
public static void main(String args[])
{

	String name;
	String gender;
	String address;
	int age;
	int empid;
	String cname;
	String qualification;
	int salary;
	int teachid;
	String dept;
	String sub;

Scanner sc=new Scanner(System.in);
Teacher arr[]=new Teacher[3];
System.out.println("enter size ");
int n=sc.nextInt();

for(int i=0;i<n;i++)
{

	System.out.println("Name:");
	name=sc.next();
	System.out.println("gender:");
	gender=sc.next();
	System.out.println("Address:");
	address=sc.next();
	System.out.println("Age:");
	age=sc.nextInt();
	System.out.println("EmpID:");
	empid=sc.nextInt();
	System.out.println("Company name:");
	cname=sc.next();
	System.out.println("Qualification:");
	qualification=sc.next();
	System.out.println("Salary:");
	salary=sc.nextInt();
	System.out.println("Teacher id:");
	teachid=sc.nextInt();
	System.out.println("Department:");
	dept=sc.next();
	System.out.println("Subject:");
	sub=sc.next();
	
	arr[i]=new Teacher( name,gender,address,age,empid,cname,qualification,salary,teachid,dept,sub);
}
	for(int i=0;i<n;i++)
{
arr[i].display();
}
}
}


OUTPUT:


enter size 
2
Name:
rgdx
gender:
fdg
Address:
dfhdg
Age:
3
EmpID:
23    
Company name:
ewgr
Qualification:
rfdg
Salary:
435
Teacher id:
43 
Department:
fdh
Subject:
dfh
Name:
dsgh
gender:
dh
Address:
dh
Age:
54
EmpID:
5   
Company name:
rdg
Qualification:
reg
Salary:
46
Teacher id:
56
Department:
dfh
Subject:
dh
<<<<<.......OUTPUT......>>>>>
Name:rgdx
Gender:fdg
Address:dfhdg
age:3
empid:23
company name:ewgr
qualification:rfdg
Salary:435
Teacher id:43
Depertment:dfh
Subject:fdh
<<<<<.......OUTPUT......>>>>>
Name:dsgh
Gender:dh
Address:dh
age:54
empid:5
company name:rdg
qualification:reg
Salary:46
Teacher id:56
Depertment:dh
Subject:dfh


-----------------------------------------------------------------------------------------------------------------------------------------

17)

Method Overriding


import java.util.*;
class Shapes
{
public double area()
{
return 0;
}
}
	
class Rectangle extends Shapes
{
private double l;
private double w;

public Rectangle(double l,double w)
{
this.l=l;
this.w=w;
}

public double area()
{
return l*w;
}
}

class Circle extends Shapes
{
private double r;

public Circle(double r)
{
this.r=r;
}

public double area()
{
return 3.14*r*r;
}
}



class Square extends Shapes
{
private double side;

public Square(double side)
{
this.side=side;

}
public double area()
{
return side*side;
}
}

public class Overriding
{
public static void main(String args[])
{
Shapes rect=new Rectangle(5,4);
Shapes cir=new Circle(7);
Shapes sqr=new Square(6);

	System.out.println("Area of rectangle:"+rect.area());
	System.out.println("Area of circle:"+cir.area());
	System.out.println("Area of square:"+sqr.area());
}
}


OUTPUT:


Area of rectangle:20.0
Area of circle:153.86
Area of square:36.0


---------------------------------------------------------------------------------------------------------------------------------------

18)

Abstract Class


abstract class Shape {
    abstract void area();
}

class Rect extends Shape {
    int length, breadth;


    Rect(int l, int b) {
        length = l;
        breadth = b;
    }


    void area() {
        System.out.println("Area of Rectangle: " + (length * breadth));
    }
}

class Circle extends Shape {
    int radius;


    Circle(int r) {
        radius = r;
    }


    void area() {
        System.out.println("Area of Circle: " + (3.14 * radius * radius));
    }
}

class Square extends Shape {
    int side;


    Square(int s) {
        side = s;
    }


    void area() {
        System.out.println("Area of Square: " + (side * side));
    }
}

public class Main {
    public static void main(String args[]) {
        Rect r = new Rect(4, 5);     
        Circle c = new Circle(3);   
        Square s = new Square(4);  

        r.area();  
        c.area(); 
        s.area(); 
    }
}


OUTPUT:


Area of Rectangle: 20
Area of Circle: 28.259999999999998
Area of Square: 16


-----------------------------------------------------------------------------------------------------------------------------------------


19)

Interface


import java.util.*;

interface Shapes {
    double area();
    double perimeter();
}

class Rectangle implements Shapes {
    double l;
    double w;

    public Rectangle(double l, double w) {
        this.l = l;
        this.w = w;
    }

    public double area() {
        return l * w;
    }

    public double perimeter() {
        return 2 * (l + w);
    }
}

class Circle implements Shapes {
    double r;

    public Circle(double r) {
        this.r = r;
    }

    public double area() {
        return 3.14 * r * r;
    }

    public double perimeter() {
        return 2 * 3.14 * r;
    }
}

class Square implements Shapes {
    private double side;

    public Square(double side) {
        this.side = side;
    }

    public double area() {
        return side * side;
    }

    public double perimeter() {
        return 4 * side;
    }
}

public class Interface {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int choice;

        while (true) {
            System.out.println("Menu: ");
            System.out.println("1. Area of Circle");
            System.out.println("2. Area of Rectangle");
            System.out.println("3. Area of Square");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            choice = sc.nextInt();

            if (choice == 1) {
                System.out.println("Enter radius: ");
                double r = sc.nextDouble();
                Shapes shape = new Circle(r);
                System.out.println("Area: " + shape.area());
                System.out.println("Perimeter: " + shape.perimeter());
            } else if (choice == 2) {
                System.out.println("Enter length: ");
                double l = sc.nextDouble();
                System.out.println("Enter width: ");
                double w = sc.nextDouble();
                Shapes shape = new Rectangle(l, w);
                System.out.println("Area: " + shape.area());
                System.out.println("Perimeter: " + shape.perimeter());
            } else if (choice == 3) {
                System.out.println("Enter side length: ");
                double side = sc.nextDouble();
                Shapes shape = new Square(side);
                System.out.println("Area: " + shape.area());
                System.out.println("Perimeter: " + shape.perimeter());
            } else if (choice == 4) {
                System.out.println("Exiting...");
                break;
            } else {
                System.out.println("Invalid choice! Try again.");
            }
        }
    }
}


OUTPUT:




Menu: 
1. Area of Circle
2. Area of Rectangle
3. Area of Square
4. Exit
Enter your choice: 1
Enter radius: 
3
Area: 28.259999999999998
Perimeter: 18.84
Menu: 
1. Area of Circle
2. Area of Rectangle
3. Area of Square
4. Exit
Enter your choice: 3
Enter side length: 
5
Area: 25.0
Perimeter: 20.0
Menu: 
1. Area of Circle
2. Area of Rectangle
3. Area of Square
4. Exit
Enter your choice:




---------------------------------------------------------------------------------------------------------------------------------------------


20)

Exception


class Exception
{
	public static void main(String args[])
	{

	//ArithmeticException

		try {
			int a=10;
			int b=0;
			int result=a/b;
			System.out.println("result="+result);	
		}
		catch(ArithmeticException e) {
			System.out.println("Arithmetic Exception");
		}

	//ArrayIndexOutOfBoundsException

		try {
			int[] numbers = {1,2,3};
			System.out.println("Accessing index 5:"+numbers[5]);	
		}
		catch(ArrayIndexOutOfBoundsException e) {
			System.out.println("ArrayIndexOutOfBoundsException ");
		}
		
	
	}
}




OUTPUT:


Arithmetic Exception

ArrayIndexOutOfBoundsException 



---------------------------------------------------------------------------------------------------------------------------------------------


21)


                       

















